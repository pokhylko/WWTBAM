{"version":3,"sources":["images/like.svg","components/Start/Start.jsx","images/open-menu.svg","images/close-menu.svg","components/MobileMenu/MobileMenu.jsx","components/Question/Question.jsx","components/Steps/Steps.jsx","components/Game/Game.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Start","setGameStart","gameOver","score","className","classNames","src","like","alt","toLocaleString","type","onClick","MobileMenu","setHideSteps","useState","isOpen","setIsOpen","state","closeMenu","openMenu","Question","currentStep","setCurrentStep","setGameOver","setScore","selectedAnswer","setSelectedAnswer","correctAnswer","setCorrectAnswer","wrongAnswer","setWrongAnswer","currentQuestion","configuration","questions","randomizeAnswers","useMemo","answers","sort","Math","random","checkAnswer","useCallback","answer","timerWrong","timerCorrect","correct","setTimeout","clearTimeout","finishStep","steps","gameScore","useEffect","timer","length","question","map","index","letters","reverseSteps","reverse","Steps","hideSteps","step","Game","App","gameStart","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8086c8b4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/like.ae778be2.svg\";","import React from 'react';\nimport './Start.scss';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport like from '../../images/like.svg';\n\nconst Start = ({ setGameStart, gameOver, score }) => {\n  const startGame = () => {\n    setGameStart(true);\n  };\n\n  return (\n    <div className={classNames(\n      'game-start',\n      { 'game-start_bg': !gameOver },\n    )}\n    >\n      <div className=\"game-start__wrapper\">\n        <img className=\"game-start__logo\" src={like} alt=\"like\" />\n\n        <div className=\"game-start__content\">\n          {!gameOver ? (\n            <h1 className=\"game-start__title\">Who wants to be a millionaire?</h1>\n          ) : (\n            <div className=\"game-start__score\">\n              <h3 className=\"game-start__score-title\">Total score:</h3>\n              <h2 className=\"game-start__title\">{`$${score.toLocaleString()} earned`}</h2>\n            </div>\n          )}\n\n          <button\n            className=\"game-start__button\"\n            type=\"button\"\n            onClick={startGame}\n          >\n            Start\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nStart.propTypes = {\n  setGameStart: PropTypes.func.isRequired,\n  gameOver: PropTypes.bool.isRequired,\n  score: PropTypes.number.isRequired,\n};\n\nexport default Start;\n","export default __webpack_public_path__ + \"static/media/open-menu.4cc3cba4.svg\";","export default __webpack_public_path__ + \"static/media/close-menu.f1510c4e.svg\";","import React, { useState } from 'react';\nimport './MobileMenu.scss';\nimport PropTypes from 'prop-types';\nimport openMenu from '../../images/open-menu.svg';\nimport closeMenu from '../../images/close-menu.svg';\n\nconst MobileMenu = ({ setHideSteps }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClick = () => {\n    setIsOpen((state) => !state);\n    setHideSteps((state) => !state);\n  };\n\n  return (\n    <div className=\"mobile-menu\">\n      <button\n        className=\"mobile-menu__button\"\n        type=\"button\"\n        onClick={handleClick}\n      >\n        <img\n          className=\"mobile-menu__icon\"\n          src={!isOpen ? openMenu : closeMenu}\n          alt=\"menu-icon\"\n        />\n      </button>\n    </div>\n  );\n};\n\nMobileMenu.propTypes = {\n  setHideSteps: PropTypes.func.isRequired,\n};\n\nexport default MobileMenu;\n","import React, {\n  useState, useEffect, useCallback, useMemo,\n} from 'react';\nimport './Question.scss';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport configuration from '../../data/game-configuration.json';\n\nconst Question = ({\n  currentStep, setCurrentStep, setGameStart, setGameOver, setScore,\n}) => {\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [correctAnswer, setCorrectAnswer] = useState('');\n  const [wrongAnswer, setWrongAnswer] = useState('');\n  const currentQuestion = configuration.questions[currentStep];\n  const randomizeAnswers = useMemo(() => currentQuestion.answers\n    .sort(() => Math.random() - 0.5), [currentQuestion]);\n\n  const checkAnswer = useCallback((answer) => {\n    let timerWrong;\n    let timerCorrect;\n    setSelectedAnswer(answer);\n\n    if (answer !== currentQuestion.correct) {\n      timerWrong = setTimeout(() => {\n        setWrongAnswer(answer);\n      }, 1000);\n    }\n\n    if (answer === currentQuestion.correct) {\n      timerCorrect = setTimeout(() => {\n        setCorrectAnswer(answer);\n      }, 1000);\n    }\n\n    return () => {\n      clearTimeout(timerWrong);\n      clearTimeout(timerCorrect);\n    };\n  }, [currentStep]);\n\n  const gameScore = (finishStep) => {\n    if (finishStep === 0) {\n      setScore(0);\n    } else {\n      setScore(configuration.steps[finishStep - 1]);\n    }\n  };\n\n  const gameOver = (finishStep) => {\n    gameScore(finishStep);\n    setGameStart(false);\n    setGameOver(true);\n  };\n\n  useEffect(() => {\n    let timer;\n\n    if (correctAnswer) {\n      timer = setTimeout(() => {\n        if (currentStep === configuration.questions.length - 1) {\n          gameOver(currentStep + 1);\n        }\n\n        setCurrentStep((state) => state + 1);\n        setCorrectAnswer('');\n        setSelectedAnswer('');\n      }, 1500);\n    }\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [correctAnswer]);\n\n  useEffect(() => {\n    let timer;\n\n    if (wrongAnswer) {\n      timer = setTimeout(() => {\n        setWrongAnswer('');\n        setSelectedAnswer('');\n        gameOver(currentStep);\n      }, 1500);\n    }\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [wrongAnswer]);\n\n  return (\n    <div className=\"game-question\">\n      <h2 className=\"game-question__title\">{currentQuestion.question}</h2>\n\n      <div className=\"game-question__answers\">\n        {randomizeAnswers.map((answer, index) => (\n          <button\n            className={classNames(\n              'game-question__button',\n              {\n                'game-question__button_selected': answer === selectedAnswer,\n                'game-question__button_correct': answer === correctAnswer,\n                'game-question__button_wrong': answer === wrongAnswer,\n              },\n            )}\n            type=\"button\"\n            key={answer}\n            onClick={() => checkAnswer(answer)}\n          >\n            <span className=\"game-question__button-letter\">\n              {configuration.letters[index]}\n            </span>\n            {answer}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nQuestion.propTypes = {\n  currentQuestion: PropTypes.shape({\n    question: PropTypes.string.isRequired,\n    answers: PropTypes.arrayOf(PropTypes.string).isRequired,\n    correct: PropTypes.string.isRequired,\n  }).isRequired,\n  currentStep: PropTypes.number.isRequired,\n  setCurrentStep: PropTypes.func.isRequired,\n  setGameStart: PropTypes.func.isRequired,\n  setGameOver: PropTypes.func.isRequired,\n  setScore: PropTypes.func.isRequired,\n};\n\nexport default Question;\n","import React from 'react';\nimport './Steps.scss';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport configuration from '../../data/game-configuration.json';\n\nconst reverseSteps = [...configuration.steps].reverse();\n\nconst Steps = ({ currentStep, hideSteps }) => (\n  <div className={classNames(\n    'game-steps',\n    { 'game-steps_mobile': hideSteps },\n  )}\n  >\n    <div className=\"game-steps__list\">\n      {reverseSteps.map((step) => (\n        <div\n          className={classNames(\n            'game-steps__step',\n            {\n              'game-steps__step_inactive': step > configuration.steps[currentStep],\n              'game-steps__step_current': step === configuration.steps[currentStep],\n              'game-steps__step_finished': step < configuration.steps[currentStep],\n            },\n          )}\n          key={step}\n        >\n          {`$${step.toLocaleString()}`}\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nSteps.propTypes = {\n  currentStep: PropTypes.number.isRequired,\n  hideSteps: PropTypes.bool.isRequired,\n};\n\nexport default Steps;\n","import React, { useState } from 'react';\nimport './Game.scss';\nimport PropTypes from 'prop-types';\nimport MobileMenu from '../MobileMenu/MobileMenu';\nimport Question from '../Question/Question';\nimport Steps from '../Steps/Steps';\n\nconst Game = ({ setGameStart, setGameOver, setScore }) => {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [hideSteps, setHideSteps] = useState(true);\n\n  return (\n    <div className=\"game-field\">\n      <div className=\"game-field__wrapper\">\n        <Question\n          setCurrentStep={setCurrentStep}\n          currentStep={currentStep}\n          setGameStart={setGameStart}\n          setGameOver={setGameOver}\n          setScore={setScore}\n        />\n\n        <Steps\n          currentStep={currentStep}\n          hideSteps={hideSteps}\n        />\n      </div>\n\n      <MobileMenu setHideSteps={setHideSteps} />\n    </div>\n  );\n};\n\nGame.propTypes = {\n  setGameStart: PropTypes.func.isRequired,\n  setGameOver: PropTypes.func.isRequired,\n  setScore: PropTypes.func.isRequired,\n};\n\nexport default Game;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Start from './components/Start/Start';\nimport Game from './components/Game/Game';\n\nconst App = () => {\n  const [gameStart, setGameStart] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n\n  return (\n    <div className=\"game\">\n      { !gameStart ? (\n        <Start\n          setGameStart={setGameStart}\n          gameOver={gameOver}\n          score={score}\n        />\n      ) : (\n        <Game\n          setGameStart={setGameStart}\n          setGameOver={setGameOver}\n          setScore={setScore}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}