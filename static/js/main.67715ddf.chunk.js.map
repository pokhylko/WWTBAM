{"version":3,"sources":["images/like.svg","screens/Start/Start.jsx","images/open-menu.svg","images/close-menu.svg","components/MobileMenu/MobileMenu.jsx","screens/Game/Game.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Start","setGameStart","gameOver","score","className","classNames","src","like","alt","toLocaleString","type","onClick","MobileMenu","setShowStep","useState","isOpen","setIsOpen","state","closeMenu","openMenu","LETTERS","STEPS","Game","setGameOver","setScore","currentStep","setCurrentStep","correctAnswer","setCorrectAnswer","selectedAnswer","setSelectedAnswer","wrongAnswer","setWrongAnswer","showStep","reverseSteps","reverse","currentQuestion","questions","useEffect","setTimeout","finishStep","gameScore","question","answers","map","answer","index","correct","checkAnswer","step","App","gameStart","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67715ddf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/like.ae778be2.svg\";","import React from 'react';\nimport './Start.scss';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport like from '../../images/like.svg';\n\nconst Start = ({ setGameStart, gameOver, score }) => {\n  const startGame = () => {\n    setGameStart(true);\n  };\n\n  return (\n    <div className={classNames(\n      'game-start',\n      { 'game-start_bg': !gameOver },\n    )}\n    >\n      <div className=\"game-start__wrapper\">\n        <img className=\"game-start__logo\" src={like} alt=\"like\" />\n\n        <div className=\"game-start__content\">\n          {!gameOver ? (\n            <h1 className=\"game-start__title\">Who wants to be a millionaire?</h1>\n          ) : (\n            <div className=\"game-start__score\">\n              <h3 className=\"game-start__score-title\">Total score:</h3>\n              <h2 className=\"game-start__title\">{`$${score.toLocaleString()} earned`}</h2>\n            </div>\n          )}\n\n          <button\n            className=\"game-start__button\"\n            type=\"button\"\n            onClick={startGame}\n          >\n            Start\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nStart.propTypes = {\n  setGameStart: PropTypes.func.isRequired,\n  gameOver: PropTypes.bool.isRequired,\n  score: PropTypes.number.isRequired,\n};\n\nexport default Start;\n","export default __webpack_public_path__ + \"static/media/open-menu.4cc3cba4.svg\";","export default __webpack_public_path__ + \"static/media/close-menu.f1510c4e.svg\";","import React, { useState } from 'react';\nimport './MobileMenu.scss';\nimport PropTypes from 'prop-types';\nimport openMenu from '../../images/open-menu.svg';\nimport closeMenu from '../../images/close-menu.svg';\n\nconst MobileMenu = ({ setShowStep }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClick = () => {\n    setIsOpen((state) => !state);\n    setShowStep((state) => !state);\n  };\n\n  return (\n    <div className=\"mobile-menu\">\n      <button\n        className=\"mobile-menu__button\"\n        type=\"button\"\n        onClick={handleClick}\n      >\n        <img\n          className=\"mobile-menu__icon\"\n          src={!isOpen ? openMenu : closeMenu}\n          alt=\"menu-icon\"\n        />\n      </button>\n    </div>\n  );\n};\n\nMobileMenu.propTypes = {\n  setShowStep: PropTypes.func.isRequired,\n};\n\nexport default MobileMenu;\n","import React, { useState, useEffect } from 'react';\nimport './Game.scss';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport MobileMenu from '../../components/MobileMenu/MobileMenu';\nimport questions from '../../data/questions.json';\n\nconst LETTERS = ['A', 'B', 'C', 'D'];\nconst STEPS = [500, 1000, 2000, 4000, 8000, 16000, 32000, 64000, 125000, 250000, 500000, 1000000];\n\nconst Game = ({ setGameStart, setGameOver, setScore }) => {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [correctAnswer, setCorrectAnswer] = useState(false);\n  const [selectedAnswer, setSelectedAnswer] = useState(false);\n  const [wrongAnswer, setWrongAnswer] = useState(false);\n  const [showStep, setShowStep] = useState(false);\n  const reverseSteps = [...STEPS].reverse();\n  const currentQuestion = questions[currentStep];\n\n  const checkAnswer = (answer) => {\n    setSelectedAnswer(answer);\n\n    if (answer !== currentQuestion.correct) {\n      setTimeout(() => {\n        setWrongAnswer(answer);\n      }, 1000);\n    }\n\n    if (answer === currentQuestion.correct && currentStep === 10) {\n      setTimeout(() => {\n        setCorrectAnswer(answer);\n      }, 1000);\n    }\n\n    if (answer === currentQuestion.correct) {\n      setTimeout(() => {\n        setCorrectAnswer(answer);\n      }, 1000);\n    }\n  };\n\n  useEffect(() => {\n    if (correctAnswer) {\n      setTimeout(() => {\n        setCurrentStep((state) => state + 1);\n        setCorrectAnswer(false);\n      }, 2000);\n    }\n  }, [correctAnswer]);\n\n  const gameScore = (finishStep) => {\n    if (finishStep === 0) {\n      setScore(0);\n    } else {\n      setScore(STEPS[finishStep - 1]);\n    }\n  };\n\n  const gameOver = (finishStep) => {\n    gameScore(finishStep);\n    setGameStart(false);\n    setGameOver(true);\n  };\n\n  useEffect(() => {\n    if (wrongAnswer) {\n      setTimeout(() => {\n        gameOver(currentStep);\n        setWrongAnswer(false);\n      }, 1500);\n    }\n  }, [wrongAnswer, currentStep, gameOver]);\n\n  return (\n    <div className=\"game-field\">\n      <div className=\"game-field__wrapper\">\n        <div className=\"game-field__question\">\n          <h2 className=\"game-field__title\">{currentQuestion.question}</h2>\n\n          <div className=\"game-field__answers\">\n            {currentQuestion.answers.map((answer, index) => (\n              <button\n                className={classNames(\n                  'game-field__answer',\n                  'answer-button',\n                  {\n                    'answer-button_selected': answer === selectedAnswer,\n                    'answer-button_correct': answer === correctAnswer,\n                    'answer-button_wrong': answer === wrongAnswer,\n                  },\n                )}\n                type=\"button\"\n                key={answer}\n                onClick={() => checkAnswer(answer)}\n              >\n                <span className=\"answer-button__letter\">{LETTERS[index]}</span>\n                {answer}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        <div className={classNames(\n          'game-field__steps',\n          { 'mobile-hidden': !showStep },\n        )}\n        >\n          <div className=\"game-field__steps-list\">\n            {reverseSteps.map((step) => (\n              <div\n                className={classNames(\n                  'game-field__step',\n                  {\n                    'game-field__step_inactive': step > STEPS[currentStep],\n                    'game-field__step_current': step === STEPS[currentStep],\n                    'game-field__step_finished': step < STEPS[currentStep],\n                  },\n                )}\n                key={step}\n              >\n                {`$${step.toLocaleString()}`}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <MobileMenu setShowStep={setShowStep} />\n      </div>\n    </div>\n  );\n};\n\nGame.propTypes = {\n  setGameStart: PropTypes.func.isRequired,\n  setGameOver: PropTypes.func.isRequired,\n  setScore: PropTypes.func.isRequired,\n};\n\nexport default Game;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Start from './screens/Start/Start';\nimport Game from './screens/Game/Game';\n\nconst App = () => {\n  const [gameStart, setGameStart] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n\n  return (\n    <div className=\"game\">\n      { !gameStart ? (\n        <Start\n          setGameStart={setGameStart}\n          gameOver={gameOver}\n          score={score}\n        />\n      ) : (\n        <Game\n          setGameStart={setGameStart}\n          setGameOver={setGameOver}\n          setScore={setScore}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}