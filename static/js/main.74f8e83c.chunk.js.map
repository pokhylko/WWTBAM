{"version":3,"sources":["images/like.svg","components/Start/Start.jsx","images/open-menu.svg","images/close-menu.svg","components/MobileMenu/MobileMenu.jsx","components/Question/Question.jsx","components/Steps/Steps.jsx","components/Game/Game.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Start","setGameStart","gameOver","score","startGame","useCallback","className","cn","src","like","alt","toLocaleString","type","onClick","MobileMenu","setHideSteps","useState","isOpen","setIsOpen","state","closeMenu","openMenu","Question","currentStep","setCurrentStep","setGameOver","setScore","selectedAnswer","setSelectedAnswer","correctAnswer","setCorrectAnswer","wrongAnswer","setWrongAnswer","isAnswered","setIsAnswered","currentQuestion","configuration","questions","randomizeAnswers","useMemo","answers","sort","Math","random","checkAnswer","answer","timerWrong","timerCorrect","correct","setTimeout","clearTimeout","finishStep","steps","gameScore","useEffect","timer","length","question","map","index","letters","defaultProps","reverseSteps","reverse","Steps","hideSteps","step","Game","App","gameStart","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74f8e83c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/like.ae778be2.svg\";","import React, { useCallback } from 'react';\n\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport './Start.scss';\n\nimport like from '../../images/like.svg';\n\nexport const Start = ({ setGameStart, gameOver, score }) => {\n  const startGame = useCallback(() => {\n    setGameStart(true);\n  }, []);\n\n  return (\n    <div className={cn(\n      'start',\n      { 'start--bg': !gameOver },\n    )}\n    >\n      <div className=\"start__wrapper\">\n        <img className=\"start__logo\" src={like} alt=\"like\" />\n\n        <div className=\"start__content\">\n          {!gameOver ? (\n            <h1 className=\"start__title\">Who wants to be a millionaire?</h1>\n          ) : (\n            <div className=\"start__score\">\n              <h2 className=\"start__score-title\">Total score:</h2>\n              <h3 className=\"start__title\">{`$${score.toLocaleString()} earned`}</h3>\n            </div>\n          )}\n\n          <button\n            className=\"start__button\"\n            type=\"button\"\n            onClick={startGame}\n          >\n            Start\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nStart.propTypes = {\n  setGameStart: PropTypes.func.isRequired,\n  gameOver: PropTypes.bool.isRequired,\n  score: PropTypes.number.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/open-menu.4cc3cba4.svg\";","export default __webpack_public_path__ + \"static/media/close-menu.f1510c4e.svg\";","import React, { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport './MobileMenu.scss';\n\nimport openMenu from '../../images/open-menu.svg';\nimport closeMenu from '../../images/close-menu.svg';\n\nexport const MobileMenu = ({ setHideSteps }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClick = () => {\n    setIsOpen((state) => !state);\n    setHideSteps((state) => !state);\n  };\n\n  return (\n    <div className=\"mobile-menu\">\n      <button\n        className=\"mobile-menu__button\"\n        type=\"button\"\n        onClick={handleClick}\n      >\n        <img\n          className=\"mobile-menu__icon\"\n          src={!isOpen ? openMenu : closeMenu}\n          alt=\"menu-icon\"\n        />\n      </button>\n    </div>\n  );\n};\n\nMobileMenu.propTypes = {\n  setHideSteps: PropTypes.func.isRequired,\n};\n","import React, {\n  useState, useEffect, useCallback, useMemo,\n} from 'react';\n\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport './Question.scss';\n\nimport configuration from '../../data/game-configuration.json';\n\nexport const Question = ({\n  currentStep, setCurrentStep, setGameStart, setGameOver, setScore,\n}) => {\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [correctAnswer, setCorrectAnswer] = useState('');\n  const [wrongAnswer, setWrongAnswer] = useState('');\n  const [isAnswered, setIsAnswered] = useState(false);\n  const currentQuestion = configuration.questions[currentStep];\n  const randomizeAnswers = useMemo(() => currentQuestion.answers\n    .sort(() => Math.random() - 0.5), [currentQuestion]);\n\n  const checkAnswer = useCallback((answer) => {\n    let timerWrong;\n    let timerCorrect;\n    setSelectedAnswer(answer);\n    setIsAnswered(true);\n\n    if (answer !== currentQuestion.correct) {\n      timerWrong = setTimeout(() => {\n        setWrongAnswer(answer);\n      }, 1000);\n    }\n\n    if (answer === currentQuestion.correct) {\n      timerCorrect = setTimeout(() => {\n        setCorrectAnswer(answer);\n      }, 1000);\n    }\n\n    return () => {\n      clearTimeout(timerWrong);\n      clearTimeout(timerCorrect);\n    };\n  }, [currentStep]);\n\n  const gameScore = (finishStep) => {\n    if (finishStep === 0) {\n      setScore(0);\n    } else {\n      setScore(configuration.steps[finishStep - 1]);\n    }\n  };\n\n  const gameOver = (finishStep) => {\n    gameScore(finishStep);\n    setGameStart(false);\n    setGameOver(true);\n  };\n\n  useEffect(() => {\n    let timer;\n\n    if (correctAnswer) {\n      timer = setTimeout(() => {\n        if (currentStep === configuration.questions.length - 1) {\n          gameOver(currentStep + 1);\n        }\n\n        setCurrentStep((state) => state + 1);\n        setCorrectAnswer('');\n        setSelectedAnswer('');\n        setIsAnswered(false);\n      }, 1500);\n    }\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [correctAnswer]);\n\n  useEffect(() => {\n    let timer;\n\n    if (wrongAnswer) {\n      timer = setTimeout(() => {\n        setWrongAnswer('');\n        setSelectedAnswer('');\n        gameOver(currentStep);\n      }, 1500);\n    }\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [wrongAnswer]);\n\n  return (\n    <div className=\"question\">\n      <h2 className=\"question__title\">{currentQuestion.question}</h2>\n\n      <div className=\"question__answers\">\n        {randomizeAnswers.map((answer, index) => (\n          <button\n            className={cn(\n              'question__button',\n              {\n                'question__button--selected': answer === selectedAnswer,\n                'question__button--correct': answer === correctAnswer,\n                'question__button--wrong': answer === wrongAnswer,\n                'question__button--inactive': isAnswered,\n              },\n            )}\n            type=\"button\"\n            key={answer}\n            onClick={() => checkAnswer(answer)}\n          >\n            <span className=\"question__button-letter\">\n              {configuration.letters[index]}\n            </span>\n            {answer}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nQuestion.propTypes = {\n  currentQuestion: PropTypes.shape({\n    question: PropTypes.string,\n    answers: PropTypes.arrayOf(PropTypes.string),\n    correct: PropTypes.string,\n  }),\n  currentStep: PropTypes.number.isRequired,\n  setCurrentStep: PropTypes.func.isRequired,\n  setGameStart: PropTypes.func.isRequired,\n  setGameOver: PropTypes.func.isRequired,\n  setScore: PropTypes.func.isRequired,\n};\n\nQuestion.defaultProps = {\n  currentQuestion: {},\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport './Steps.scss';\n\nimport configuration from '../../data/game-configuration.json';\n\nconst reverseSteps = [...configuration.steps].reverse();\n\nexport const Steps = ({ currentStep, hideSteps }) => (\n  <div className={cn(\n    'game-steps',\n    { 'game-steps_mobile': hideSteps },\n  )}\n  >\n    {reverseSteps.map((step) => (\n      <div\n        className={cn(\n          'game-steps__step',\n          {\n            'game-steps__step_inactive': step > configuration.steps[currentStep],\n            'game-steps__step_current': step === configuration.steps[currentStep],\n            'game-steps__step_finished': step < configuration.steps[currentStep],\n          },\n        )}\n        key={step}\n      >\n        {`$${step.toLocaleString()}`}\n      </div>\n    ))}\n  </div>\n);\n\nSteps.propTypes = {\n  currentStep: PropTypes.number.isRequired,\n  hideSteps: PropTypes.bool.isRequired,\n};\n","import React, { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { MobileMenu } from '../MobileMenu';\nimport { Question } from '../Question';\nimport { Steps } from '../Steps';\n\nimport './Game.scss';\n\nexport const Game = ({ setGameStart, setGameOver, setScore }) => {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [hideSteps, setHideSteps] = useState(true);\n\n  return (\n    <div className=\"game-field\">\n      <div className=\"game-field__wrapper\">\n        <Question\n          setCurrentStep={setCurrentStep}\n          currentStep={currentStep}\n          setGameStart={setGameStart}\n          setGameOver={setGameOver}\n          setScore={setScore}\n        />\n\n        <Steps\n          currentStep={currentStep}\n          hideSteps={hideSteps}\n        />\n      </div>\n\n      <MobileMenu setHideSteps={setHideSteps} />\n    </div>\n  );\n};\n\nGame.propTypes = {\n  setGameStart: PropTypes.func.isRequired,\n  setGameOver: PropTypes.func.isRequired,\n  setScore: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\n\nimport { Start } from './components/Start';\nimport { Game } from './components/Game';\n\nimport './App.scss';\n\nexport const App = () => {\n  const [gameStart, setGameStart] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n\n  return (\n    <div className=\"game\">\n      { !gameStart ? (\n        <Start\n          setGameStart={setGameStart}\n          gameOver={gameOver}\n          score={score}\n        />\n      ) : (\n        <Game\n          setGameStart={setGameStart}\n          setGameOver={setGameOver}\n          setScore={setScore}\n        />\n      )}\n    </div>\n  );\n};\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}